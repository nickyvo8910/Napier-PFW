@model PFW_CW_2.Models.causes

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>causes</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.causeId)

        <div class="form-group">
            @Html.LabelFor(model => model.author, "author", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("author", null, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.author, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.title, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.title, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.startDate, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.startDate, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.startDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.endDate, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.endDate, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.endDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.status, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.status, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.status, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextAreaFor(m => m.description, new
                {
                    rows = "20",
                    style = "resize:none;width:400px;",
                    placeholder = Html.DisplayNameFor(m => m.description),
                    @class = "form-control input-lg textarea-editor"
                })
                @Html.ValidationMessageFor(model => model.description, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.photoLnk, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.photoLnk, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.photoLnk, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}