@model IEnumerable<PFW_CW_2.Models.causes>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Causes Admin Index";
}
<div class="container">
    <h2 class="row col-12">Causes Admin Index</h2>
    <div class="row col-12">
        <div class="col-12 form-group error">
            @if (TempData["SQLError"] != null)
            {
                <label class="text-center text-danger"> @TempData["SQLError"]</label>
            }
            @if (TempData["SQlMsg"] != null)
            {
                <label class="text-center text-success"> @TempData["SQlMsg"]</label>
            }
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        </div>
        <table class="col-12 table">
            <thead class="row col-12">
            <tr class="col-12">
                <th class="text-md-center">#</th>
                <th class="col-3 text-md-center">Cause Title</th>
                <th class="col-4 text-md-center">Published On</th>
                <th class="col-4 text-md-center">Status</th>
            </tr>
            </thead>
            <tbody class="row col-12">
            @{
                if (Model != null)
                {
                    var i = 0;
                    foreach (var item in Model)
                    {
                        i++;
                        <tr class="col-12 ">
                            <td class=" text-md-center">@i</td>
                            <td class=" col-4 text-md-center font-weight-bold ">
                                @Html.ActionLink(item.title, "Details", "Causes", new {id = item.causeId}, new {})
                            </td>
                            <td class=" col-3 text-md-center">
                                @if (item.startDate.HasValue)
                                {
                                    @item.startDate.Value.ToShortDateString()
                                }
                            </td>
                            <td class=" col-4 text-md-center">
                                @{
                                    var crrStatus = "";
                                    switch (item.status)
                                    {
                                        case 0:
                                            crrStatus = " Pending";
                                            break;

                                        case 1:
                                            crrStatus = " Published";
                                            break;
                                        case -1:
                                            crrStatus = " Retracted";
                                            break;
                                        default:
                                            crrStatus = "Not Available";
                                            break;
                                    }
                                    @crrStatus
                                    if (item.status == 1)
                                    {
                                        using (Html.BeginForm("RetractResult", "Causes", FormMethod.Post,
                                            new {}))
                                        {
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="id" value="@item.causeId"/>
                                            <input class="btn btn-sm btn-danger" onclick="return confirm('Are you sure ?')" type="submit" value="Retract"/>
                                        }
                                    }
                                }
                            </td>
                        </tr>
                    }
                }
            }
            </tbody>
        </table>
    </div>
</div>